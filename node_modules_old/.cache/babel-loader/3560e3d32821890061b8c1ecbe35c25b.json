{"ast":null,"code":"import displayMessage from \"./components/displayMessage.js\";\nimport { saveToken, saveUser } from \"./config/storage.js\";\nimport { baseUrl } from \"./config/api.js\";\nimport createMenu from \"./components/createMenu.js\";\nconst form = document.querySelector(\"form\");\nconst username = document.querySelector(\"#username\");\nconst password = document.querySelector(\"#password\");\nconst message = document.querySelector(\"#message-container\");\ncreateMenu();\nform.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const usernameValue = username.value.trim();\n  const passwordValue = password.value.trim();\n  console.log(usernameValue);\n\n  if (usernameValue.length === 0 || passwordValue.length === 0) {\n    return displayMessage(\"warning\", \"Wrong values\", \".message-container\");\n  }\n\n  setLogin(usernameValue, passwordValue);\n}\n\nasync function setLogin(username, password) {\n  const url = baseUrl + \"auth/local\";\n  const data = JSON.stringify({\n    identifier: username,\n    password: password\n  });\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const json = await response.json();\n    console.log(json);\n\n    if (json.user) {\n      displayMessage(\"success\", \"You are logged in\", \".message-container\");\n      saveToken(json.jwt);\n      saveUser(json.user);\n    }\n\n    if (json.error) {\n      displayMessage(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n  } catch (error) {\n    displayMessage(\"error\", \"error \", \".message-container\");\n  }\n}","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["displayMessage","saveToken","saveUser","baseUrl","createMenu","form","document","querySelector","username","password","message","addEventListener","submitForm","event","preventDefault","usernameValue","value","trim","passwordValue","console","log","length","setLogin","url","data","JSON","stringify","identifier","options","method","body","headers","response","fetch","json","user","jwt","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,gCAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAGA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;AACA,MAAME,QAAQ,GAAGH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;AACA,MAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAhB;AAEAH,UAAU;AAEVC,IAAI,CAACM,gBAAL,CAAsB,QAAtB,EAAgCC,UAAhC;;AAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,EAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,aAAa,GAAGP,QAAQ,CAACQ,KAAT,CAAeC,IAAf,EAAtB;AACA,QAAMC,aAAa,GAAGT,QAAQ,CAACO,KAAT,CAAeC,IAAf,EAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AAEA,MAAIA,aAAa,CAACM,MAAd,KAAyB,CAAzB,IAA8BH,aAAa,CAACG,MAAd,KAAyB,CAA3D,EAA8D;AAC1D,WAAOrB,cAAc,CAAC,SAAD,EAAY,cAAZ,EAA4B,oBAA5B,CAArB;AACH;;AAEDsB,EAAAA,QAAQ,CAACP,aAAD,EAAgBG,aAAhB,CAAR;AACH;;AAED,eAAeI,QAAf,CAAyBd,QAAzB,EAAmCC,QAAnC,EAA6C;AACzC,QAAMc,GAAG,GAAGpB,OAAO,GAAG,YAAtB;AAEA,QAAMqB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,UAAU,EAAEnB,QAAd;AAAwBC,IAAAA,QAAQ,EAAEA;AAAlC,GAAf,CAAb;AAGA,QAAMmB,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,IAAI,EAAEN,IAFM;AAGZO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHG,GAAhB;;AAQJ,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMK,OAAN,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AAEA,QAAIA,IAAI,CAACC,IAAT,EAAe;AAEXnC,MAAAA,cAAc,CAAC,SAAD,EAAY,mBAAZ,EAAiC,oBAAjC,CAAd;AACCC,MAAAA,SAAS,CAACiC,IAAI,CAACE,GAAN,CAAT;AACAlC,MAAAA,QAAQ,CAACgC,IAAI,CAACC,IAAN,CAAR;AAIJ;;AAED,QAAID,IAAI,CAACG,KAAT,EAAgB;AACZrC,MAAAA,cAAc,CAAC,SAAD,EAAY,mCAAZ,EAAiD,oBAAjD,CAAd;AACH;AAKJ,GAvBD,CAuBE,OAAOqC,KAAP,EAAc;AACZrC,IAAAA,cAAc,CAAC,OAAD,EAAU,QAAV,EAAoB,oBAApB,CAAd;AAEH;AAEA","sourcesContent":["import displayMessage from \"./components/displayMessage.js\";\nimport { saveToken, saveUser } from \"./config/storage.js\";\nimport { baseUrl } from \"./config/api.js\";\nimport createMenu from \"./components/createMenu.js\";\n\n\nconst form = document.querySelector(\"form\");\nconst username = document.querySelector(\"#username\");\nconst password = document.querySelector(\"#password\");\nconst message = document.querySelector(\"#message-container\");\n\ncreateMenu();\n\nform.addEventListener(\"submit\", submitForm)\n\nfunction submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n        return displayMessage(\"warning\", \"Wrong values\", \".message-container\");\n    }\n\n    setLogin(usernameValue, passwordValue);\n}\n\nasync function setLogin (username, password) {\n    const url = baseUrl + \"auth/local\";\n\n    const data = JSON.stringify({ identifier: username, password: password });\n\n  \n    const options = {\n        method: \"POST\",\n        body: data,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n\ntry {\n    const response = await fetch(url, options);\n    const json = await response.json();\n   \n    console.log(json);\n\n    if (json.user) {\n\n        displayMessage(\"success\", \"You are logged in\", \".message-container\");\n         saveToken(json.jwt);\n         saveUser(json.user);\n\n       \n\n    }\n\n    if (json.error) {\n        displayMessage(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n\n   \n\n    \n} catch (error) {\n    displayMessage(\"error\", \"error \", \".message-container\");\n    \n}\n\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}