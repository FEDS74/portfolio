{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js\";\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { URL } from './config/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nForm.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const usernameValue = username.value.trim();\n  const emailValue = email.value.trim();\n  const passwordValue = password.value.trim();\n  console.log(usernameValue);\n  console.log(emailValue);\n  console.log(passwordValue);\n\n  if (usernameValue.length === 0 || emailValue.length === 0 || passwordValue.length === 0) {\n    console.log(usernameValue);\n    console.log(emailValue);\n    console.log(passwordValue);\n  }\n\n  setRegister(username, email, password);\n}\n\nasync function setRegister(username, email, password) {\n  const registeredData = JSON.stringify({\n    identifier: username,\n    email: email,\n    password: password\n  });\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: registeredData\n  };\n\n  try {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n    console.log(json);\n\n    if (json.user) {\n      console.log(json.user);\n      saveToken(json.jwt);\n      saveUser(json.user);\n    }\n\n    if (json.error) {\n      /*#__PURE__*/\n      _jsxDEV(\"h1\", {\n        children: \"incorrect username or password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    }\n  } catch (error) {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: \"error error error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      required: true,\n      onChange: event => setEmail(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-outline-dark\",\n      type: \"submit\",\n      children: \"Send to register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\nexport default setRegister;","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["React","SyntheticEvent","useState","Form","Button","URL","addEventListener","submitForm","event","preventDefault","usernameValue","username","value","trim","emailValue","email","passwordValue","password","console","log","length","setRegister","registeredData","JSON","stringify","identifier","options","method","headers","body","response","fetch","json","user","saveToken","jwt","saveUser","error","setUsername","target","setEmail","setPassword"],"mappings":"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","sourcesContent":["import React, {SyntheticEvent, useState} from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { URL } from './config/Api';\n\nForm.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n    event.preventDefault();\n\n    const usernameValue = username.value.trim();\n    const emailValue = email.value.trim();\n    const passwordValue = password.value.trim();\n\n    console.log(usernameValue);\n    console.log(emailValue);\n    console.log(passwordValue);\n        \n\n    if (usernameValue.length === 0 || emailValue.length === 0 || passwordValue.length === 0) {\n          console.log(usernameValue);\n            console.log(emailValue);\n            console.log(passwordValue);\n    }\n\n    setRegister(username, email, password);\n}\n\nasync function setRegister (username, email, password) {\n        const registeredData = JSON.stringify({identifier: username, email: email, password: password }) \n\n        const options = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: registeredData,\n    };\n\n    try {\n        const response = await fetch(URL, options);\n        const json = await response.json();\n\n        console.log(json);\n\n        if (json.user) {\n            console.log(json.user);\n            saveToken(json.jwt);\n            saveUser(json.user);\n        }\n\n        if (json.error) {\n            <h1>incorrect username or password</h1>\n        }\n \n    } catch (error) {\n        <h1>error error error</h1>\n    }\n\n\n    return (\n        <Form onSubmit={submitForm}>\n            <h1>Please register to login</h1>\n            <input className=\"form-control\" placeholder=\"Username\" required \n                onChange={event => setUsername(event.target.value)}\n            />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n                onChange={event => setEmail(event.target.value)}\n            />\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n                onChange={event => setPassword(event.target.value)}\n            />\n            <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n        </Form>\n    );\n}\n\nexport default setRegister;\n"]},"metadata":{},"sourceType":"module"}