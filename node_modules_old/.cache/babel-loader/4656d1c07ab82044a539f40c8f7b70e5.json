{"ast":null,"code":"import { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\nconst Register = () => {\n  form.addEventListener(\"submit\", submitForm);\n\n  function submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n      return \"warning\", \"Wrong values\", \".message-container\";\n    }\n\n    setRegister(usernameValue, passwordValue);\n  }\n\n  async function setRegister(username, email, password) {\n    const registerData = JSON.stringify({\n      identifier: username,\n      email: email,\n      password: password\n    });\n    const options = {\n      method: \"POST\",\n      body: registerData,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await fetch(URL, options);\n      const json = await response.json();\n      console.log(json);\n\n      if (json.user) {\n        return \"success\", \"You are logged in\", \".message-container\";\n        saveToken(json.jwt);\n        saveUser(json.user);\n      }\n\n      if (json.error) {\n        return \"warning\", \"Username or password is incorrect\", \".message-container\";\n      }\n    } catch (error) {\n      return \"error\", \"error \", \".message-container\";\n    }\n  }\n};\n\n_c = Register;\nexport default Register; // return (\n//     <Form onSubmit={submitForm}>\n//         <h1>Please register to login</h1>\n//         <input className=\"form-control\" placeholder=\"Username\" required \n//             onChange={event => setUsername(event.target.value)}\n//         />\n//         <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n//             onChange={event => setEmail(event.target.value)}\n//         />\n//         <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n//             onChange={event => setPassword(event.target.value)}\n//         />\n//         <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n//     </Form>\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["saveToken","saveUser","URL","Register","form","addEventListener","submitForm","event","preventDefault","usernameValue","username","value","trim","passwordValue","password","console","log","length","setRegister","email","registerData","JSON","stringify","identifier","options","method","body","headers","response","fetch","json","user","jwt","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AACA,SAASC,GAAT,QAAoB,cAApB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAGvBC,EAAAA,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAgCC,UAAhC;;AAEA,WAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGC,QAAQ,CAACC,KAAT,CAAeC,IAAf,EAAtB;AACA,UAAMC,aAAa,GAAGC,QAAQ,CAACH,KAAT,CAAeC,IAAf,EAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;;AAEA,QAAIA,aAAa,CAACQ,MAAd,KAAyB,CAAzB,IAA8BJ,aAAa,CAACI,MAAd,KAAyB,CAA3D,EAA8D;AAC1D,aAAO,WAAW,cAAX,EAA2B,oBAAlC;AACH;;AAEDC,IAAAA,WAAW,CAACT,aAAD,EAAgBI,aAAhB,CAAX;AACH;;AAED,iBAAeK,WAAf,CAA4BR,QAA5B,EAAsCS,KAAtC,EAA6CL,QAA7C,EAAuD;AACnD,UAAMM,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,UAAU,EAAEb,QAAd;AAAwBS,MAAAA,KAAK,EAAEA,KAA/B;AAAsCL,MAAAA,QAAQ,EAAEA;AAAhD,KAAf,CAArB;AAGA,UAAMU,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEN,YAFM;AAGZO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHG,KAAhB;;AAMJ,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC3B,GAAD,EAAMsB,OAAN,CAA5B;AACA,YAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEAf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AAEA,UAAIA,IAAI,CAACC,IAAT,EAAe;AAEX,eAAO,WAAW,mBAAX,EAAgC,oBAAvC;AACC/B,QAAAA,SAAS,CAAC8B,IAAI,CAACE,GAAN,CAAT;AACA/B,QAAAA,QAAQ,CAAC6B,IAAI,CAACC,IAAN,CAAR;AAIJ;;AAED,UAAID,IAAI,CAACG,KAAT,EAAgB;AACZ,eAAO,WAAW,mCAAX,EAAgD,oBAAvD;AACH;AAKJ,KAvBD,CAuBE,OAAOA,KAAP,EAAc;AACZ,aAAO,SAAS,QAAT,EAAmB,oBAA1B;AAEH;AAEA;AAGA,CA3DD;;KAAM9B,Q;AA6DN,eAAeA,QAAf,C,CAWI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\n\n\nconst Register = () => {\n\n\nform.addEventListener(\"submit\", submitForm)\n\nfunction submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n        return(\"warning\", \"Wrong values\", \".message-container\");\n    }\n\n    setRegister(usernameValue, passwordValue);\n}\n\nasync function setRegister (username, email, password) {\n    const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n\n  \n    const options = {\n        method: \"POST\",\n        body: registerData,\n        headers: {\"Content-Type\": \"application/json\"},\n    };\n\ntry {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n   \n    console.log(json);\n\n    if (json.user) {\n\n        return(\"success\", \"You are logged in\", \".message-container\");\n         saveToken(json.jwt);\n         saveUser(json.user);\n\n       \n\n    }\n\n    if (json.error) {\n        return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n\n   \n\n    \n} catch (error) {\n    return(\"error\", \"error \", \".message-container\");\n    \n}\n\n}\n\n\n}\n\nexport default Register;\n\n\n\n\n\n\n\n\n\n\n    // return (\n    //     <Form onSubmit={submitForm}>\n    //         <h1>Please register to login</h1>\n    //         <input className=\"form-control\" placeholder=\"Username\" required \n    //             onChange={event => setUsername(event.target.value)}\n    //         />\n    //         <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n    //             onChange={event => setEmail(event.target.value)}\n    //         />\n    //         <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n    //             onChange={event => setPassword(event.target.value)}\n    //         />\n    //         <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n    //     </Form>\n    // );\n\n"]},"metadata":{},"sourceType":"module"}