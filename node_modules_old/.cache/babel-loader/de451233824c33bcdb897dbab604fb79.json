{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setpassword] = useState(initialState);\n\n  function submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n      return \"warning\", \"Wrong values\", \".message-container\";\n    }\n\n    setRegister(usernameValue, passwordValue);\n  }\n\n  async function setRegister(username, email, password) {\n    const registerData = JSON.stringify({\n      identifier: username,\n      email: email,\n      password: password\n    });\n    const options = {\n      method: \"POST\",\n      body: registerData,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await fetch(URL, options);\n      const json = await response.json();\n      console.log(json);\n\n      if (json.user) {\n        return \"success\", \"You are logged in\", \".message-container\";\n        saveToken(json.jwt);\n        saveUser(json.user);\n      }\n\n      if (json.error) {\n        return \"warning\", \"Username or password is incorrect\", \".message-container\";\n      }\n    } catch (error) {\n      return \"error\", \"error \", \".message-container\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      required: true,\n      onChange: event => setEmail(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-outline-dark\",\n      type: \"submit\",\n      children: \"Send to register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"3JD4cAUa/E/dD8pwFdded3x4oAU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["saveToken","saveUser","URL","Register","username","setUsername","useState","email","setEmail","password","setpassword","initialState","submitForm","event","preventDefault","usernameValue","value","trim","passwordValue","console","log","length","setRegister","registerData","JSON","stringify","identifier","options","method","body","headers","response","fetch","json","user","jwt","error","target","setPassword"],"mappings":"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","sourcesContent":["import { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\n\n\nconst Register = () => {\n\nconst [username, setUsername] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setpassword] = useState(initialState)\n\nfunction submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n        return(\"warning\", \"Wrong values\", \".message-container\");\n    }\n\n    setRegister(usernameValue, passwordValue);\n}\n\nasync function setRegister (username, email, password) {\n    const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n\n  \n    const options = {\n        method: \"POST\",\n        body: registerData,\n        headers: {\"Content-Type\": \"application/json\"},\n    };\n\ntry {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n   \n    console.log(json);\n\n    if (json.user) {\n\n        return(\"success\", \"You are logged in\", \".message-container\");\n         saveToken(json.jwt);\n         saveUser(json.user);\n\n       \n\n    }\n\n    if (json.error) {\n        return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n\n   \n\n    \n} catch (error) {\n    return(\"error\", \"error \", \".message-container\");\n    \n}\n\n}\n\n    return (\n        <Form onSubmit={submitForm}>\n            <h1>Please register to login</h1>\n            <input className=\"form-control\" placeholder=\"Username\" required \n                onChange={event => setUsername(event.target.value)}\n            />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n                onChange={event => setEmail(event.target.value)}\n            />\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n                onChange={event => setPassword(event.target.value)}\n            />\n            <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n        </Form>\n    );\n\n}\n\nexport default Register;\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}