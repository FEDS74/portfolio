{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submitForm = async event => {\n    event.preventDefault();\n    const response = await fetch(URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const content = await response.json();\n    console.log(content);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      onChange: event => setName(event.target.value.trim())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      required: true,\n      onChange: event => setEmail(event.target.value.trim())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: event => setPassword(event.target.value.trim())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-outline-dark\",\n      type: \"submit\",\n      children: \"Send to register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n\n_c = Register;\nexport default Register; // async function setRegister (username, email, password) {\n//     const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n//     const options = {\n//         method: \"POST\",\n//         body: registerData,\n//         headers: {\"Content-Type\": \"application/json\"},\n//     };\n// try {\n//     const response = await fetch(URL, options);\n//     const json = await response.json();\n//     console.log(json);\n//     if (json.user) {\n//         return(\"success\", \"You are logged in\", \".message-container\");\n//          saveToken(json.jwt);\n//          saveUser(json.user);\n//     }\n//     if (json.error) {\n//         return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n//     }\n// } catch (error) {\n//     return(\"error\", \"error \", \".message-container\");\n// }\n// }\n// function submitForm(event) {\n//     event.preventDefault();\n//     setUsername(username);\n//     setEmail(email);\n//     setPassword(password);\n//     console.log(username);\n//     if (username.length === 0 || email.length === 0 || password.length === 0) {\n//         return(\"warning\", \"Wrong values\", \".message-container\");\n//     }\n//     setRegister(username, email, password);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["useState","Form","Button","saveToken","saveUser","URL","Register","name","setName","email","setEmail","password","setPassword","submitForm","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","content","json","console","log","target","value","trim"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AACA,SAASC,GAAT,QAAoB,cAApB;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEZ,GAAF,EAAO;AAC/Ba,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFsB;AAG/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,QAAAA,IAAF;AAAQE,QAAAA,KAAR;AAAeE,QAAAA;AAAf,OAAf;AAHyB,KAAP,CAA5B;AAMA,UAAMY,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEH,GAZD;;AAeA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEV,UAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,WAAW,EAAC,UAA5C;AAAuD,MAAA,QAAQ,MAA/D;AACI,MAAA,QAAQ,EAAEC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACa,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAD;AAD9B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAA6C,MAAA,WAAW,EAAC,OAAzD;AAAiE,MAAA,QAAQ,MAAzE;AACI,MAAA,QAAQ,EAAEf,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACa,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAD;AAD/B;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAgD,MAAA,WAAW,EAAC,UAA5D;AAAuE,MAAA,QAAQ,MAA/E;AACI,MAAA,QAAQ,EAAEf,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACa,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAD;AADlC;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,IAAI,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CArCD;;GAAMvB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf,C,CAOA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\n\n\nconst Register = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch( URL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ name, email, password})\n        });\n\n        const content = await response.json();\n        console.log(content);\n\n    }\n\n\n    return (\n        <Form onSubmit={submitForm}>\n            <h1>Please register to login</h1>\n            <input className=\"form-control\" placeholder=\"Username\" required \n                onChange={event => setName(event.target.value.trim())}\n            />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n                onChange={event => setEmail(event.target.value.trim())}\n            />\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n                onChange={event => setPassword(event.target.value.trim())}\n            />\n            <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n        </Form>\n    );\n\n}\n\nexport default Register;\n\n\n\n\n\n\n// async function setRegister (username, email, password) {\n//     const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n\n  \n//     const options = {\n//         method: \"POST\",\n//         body: registerData,\n//         headers: {\"Content-Type\": \"application/json\"},\n//     };\n\n// try {\n//     const response = await fetch(URL, options);\n//     const json = await response.json();\n   \n//     console.log(json);\n\n//     if (json.user) {\n\n//         return(\"success\", \"You are logged in\", \".message-container\");\n//          saveToken(json.jwt);\n//          saveUser(json.user);\n\n       \n\n//     }\n\n//     if (json.error) {\n//         return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n//     }\n\n   \n\n    \n// } catch (error) {\n//     return(\"error\", \"error \", \".message-container\");\n    \n// }\n\n// }\n\n\n\n\n\n\n// function submitForm(event) {\n//     event.preventDefault();\n \n//     setUsername(username);\n//     setEmail(email);\n//     setPassword(password);\n//     console.log(username);\n\n//     if (username.length === 0 || email.length === 0 || password.length === 0) {\n//         return(\"warning\", \"Wrong values\", \".message-container\");\n//     }\n\n//     setRegister(username, email, password);\n// }\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}