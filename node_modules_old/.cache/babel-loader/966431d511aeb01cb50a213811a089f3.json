{"ast":null,"code":"import { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/api';\nform.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const usernameValue = username.value.trim();\n  const passwordValue = password.value.trim();\n  console.log(usernameValue);\n\n  if (usernameValue.length === 0 || passwordValue.length === 0) {\n    return \"warning\", \"Wrong values\", \".message-container\";\n  }\n\n  setRegister(usernameValue, passwordValue);\n}\n\nasync function setRegister(username, email, password) {\n  const registerData = JSON.stringify({\n    identifier: username,\n    email: email,\n    password: password\n  });\n  const options = {\n    method: \"POST\",\n    body: registerData,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n    console.log(json);\n\n    if (json.user) {\n      return \"success\", \"You are logged in\", \".message-container\";\n      saveToken(json.jwt);\n      saveUser(json.user);\n    }\n\n    if (json.error) {\n      return \"warning\", \"Username or password is incorrect\", \".message-container\";\n    }\n  } catch (error) {\n    return \"error\", \"error \", \".message-container\";\n  }\n} // return (\n//     <Form onSubmit={submitForm}>\n//         <h1>Please register to login</h1>\n//         <input className=\"form-control\" placeholder=\"Username\" required \n//             onChange={event => setUsername(event.target.value)}\n//         />\n//         <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n//             onChange={event => setEmail(event.target.value)}\n//         />\n//         <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n//             onChange={event => setPassword(event.target.value)}\n//         />\n//         <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n//     </Form>\n// );","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["saveToken","saveUser","URL","form","addEventListener","submitForm","event","preventDefault","usernameValue","username","value","trim","passwordValue","password","console","log","length","setRegister","email","registerData","JSON","stringify","identifier","options","method","body","headers","response","fetch","json","user","jwt","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAOAC,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAgCC,UAAhC;;AAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,EAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,aAAa,GAAGC,QAAQ,CAACC,KAAT,CAAeC,IAAf,EAAtB;AACA,QAAMC,aAAa,GAAGC,QAAQ,CAACH,KAAT,CAAeC,IAAf,EAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;;AAEA,MAAIA,aAAa,CAACQ,MAAd,KAAyB,CAAzB,IAA8BJ,aAAa,CAACI,MAAd,KAAyB,CAA3D,EAA8D;AAC1D,WAAO,WAAW,cAAX,EAA2B,oBAAlC;AACH;;AAEDC,EAAAA,WAAW,CAACT,aAAD,EAAgBI,aAAhB,CAAX;AACH;;AAED,eAAeK,WAAf,CAA4BR,QAA5B,EAAsCS,KAAtC,EAA6CL,QAA7C,EAAuD;AACnD,QAAMM,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,UAAU,EAAEb,QAAd;AAAwBS,IAAAA,KAAK,EAAEA,KAA/B;AAAsCL,IAAAA,QAAQ,EAAEA;AAAhD,GAAf,CAArB;AAGA,QAAMU,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,IAAI,EAAEN,YAFM;AAGZO,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAHG,GAAhB;;AAMJ,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC1B,GAAD,EAAMqB,OAAN,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AAEA,QAAIA,IAAI,CAACC,IAAT,EAAe;AAEX,aAAO,WAAW,mBAAX,EAAgC,oBAAvC;AACC9B,MAAAA,SAAS,CAAC6B,IAAI,CAACE,GAAN,CAAT;AACA9B,MAAAA,QAAQ,CAAC4B,IAAI,CAACC,IAAN,CAAR;AAIJ;;AAED,QAAID,IAAI,CAACG,KAAT,EAAgB;AACZ,aAAO,WAAW,mCAAX,EAAgD,oBAAvD;AACH;AAKJ,GAvBD,CAuBE,OAAOA,KAAP,EAAc;AACZ,WAAO,SAAS,QAAT,EAAmB,oBAA1B;AAEH;AAEA,C,CAYG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/api';\n\n\n\n\n\n\nform.addEventListener(\"submit\", submitForm)\n\nfunction submitForm(event) {\n    event.preventDefault();\n    const usernameValue = username.value.trim();\n    const passwordValue = password.value.trim();\n    console.log(usernameValue);\n\n    if (usernameValue.length === 0 || passwordValue.length === 0) {\n        return(\"warning\", \"Wrong values\", \".message-container\");\n    }\n\n    setRegister(usernameValue, passwordValue);\n}\n\nasync function setRegister (username, email, password) {\n    const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n\n  \n    const options = {\n        method: \"POST\",\n        body: registerData,\n        headers: {\"Content-Type\": \"application/json\"},\n    };\n\ntry {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n   \n    console.log(json);\n\n    if (json.user) {\n\n        return(\"success\", \"You are logged in\", \".message-container\");\n         saveToken(json.jwt);\n         saveUser(json.user);\n\n       \n\n    }\n\n    if (json.error) {\n        return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n\n   \n\n    \n} catch (error) {\n    return(\"error\", \"error \", \".message-container\");\n    \n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n    // return (\n    //     <Form onSubmit={submitForm}>\n    //         <h1>Please register to login</h1>\n    //         <input className=\"form-control\" placeholder=\"Username\" required \n    //             onChange={event => setUsername(event.target.value)}\n    //         />\n    //         <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n    //             onChange={event => setEmail(event.target.value)}\n    //         />\n    //         <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n    //             onChange={event => setPassword(event.target.value)}\n    //         />\n    //         <Button className=\"btn btn-outline-dark\" type=\"submit\">Send to register</Button>\n    //     </Form>\n    // );\n\n"]},"metadata":{},"sourceType":"module"}