{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { BASE_URL } from './config/Api';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmationPassword, setConfirmationPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const submitForm = async event => {\n    event.preventDefault();\n    const register = await fetch(BASE_URL + \"/auth/local\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        identifier: email,\n        password\n      })\n    });\n    const registerContent = await register.json();\n\n    if (registerContent.user) {\n      saveToken(registerContent.jwt);\n      saveUser(registerContent.user);\n    }\n\n    setRedirect(true);\n    window.location.reload();\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        className: \"form-control\",\n        placeholder: \"Name\",\n        required: true,\n        onChange: event => setUsername(event.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        placeholder: \"Email\",\n        required: true,\n        onChange: event => setEmail(event.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: event => setPassword(event.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-outline-dark\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"pTilERcSwkNg9tVWwnCDROP5WGI=\");\n\n_c = Register;\nexport default Register;\n/*  const response = await fetch( BASE_URL + \"/auth/local/register\", {\n     method: 'POST',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({ identifier: username, email, password})\n });\n  const content = await response.json();\n\n console.log(response);\n   let user = JSON.parse(localStorage.setItem('register', 'username'));\n  console.log(user);\n if (content.user) {\n saveToken(content.jwt);\n  saveUser(content.user);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["useState","Form","Button","saveToken","saveUser","BASE_URL","Redirect","Register","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","confirmationPassword","setConfirmationPassword","redirect","setRedirect","submitForm","event","preventDefault","register","fetch","method","headers","body","JSON","stringify","identifier","registerContent","json","user","jwt","window","location","reload","target","value","trim"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { BASE_URL } from './config/Api';\nimport { Redirect } from 'react-router';\n\n\nconst Register = () => {\n\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmationPassword, setConfirmationPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n   \n\n\nconst submitForm = async (event) => {\n        event.preventDefault();\n\n        const register = await fetch( BASE_URL + \"/auth/local\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ identifier: email, password})\n        });\n\n        const registerContent = await register.json();\n      \n\n      if (registerContent.user) {\n        saveToken(registerContent.jwt);\n        saveUser(registerContent.user);\n\n    }\n          \n   setRedirect(true);\n   window.location.reload();\n    }\n\n if (redirect) {\n        return <Redirect to=\"/Login\" />\n    }\n\n   \n\n    return (\n        <Container>\n        <Form onSubmit={submitForm}>\n            <h1>Please login</h1>\n            <input type=\"name\" className=\"form-control\" placeholder=\"Name\" required \n                onChange={event => setUsername(event.target.value.trim())}\n            />            \n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required \n                onChange={event => setEmail(event.target.value.trim())}\n            />\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required \n                onChange={event => setPassword(event.target.value.trim())}\n            />\n            <Button className=\"btn btn-outline-dark\" type=\"submit\">Register</Button>\n        </Form>\n        </Container>\n    );\n\n    }\n\n\nexport default Register;\n\n\n\n\n\n       /*  const response = await fetch( BASE_URL + \"/auth/local/register\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ identifier: username, email, password})\n        });\n\n        const content = await response.json();\n      \n\n        console.log(response);\n\n\n        let user = JSON.parse(localStorage.setItem('register', 'username'));\n\n        console.log(user);\n\n\n      if (content.user) {\n        saveToken(content.jwt);\n         saveUser(content.user);\n */\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}