{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  async function setRegister(username, email, password) {\n    const registerData = JSON.stringify({\n      identifier: username,\n      email: email,\n      password: password\n    });\n    const options = {\n      method: \"POST\",\n      body: registerData,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await fetch(URL, options);\n      const json = await response.json();\n      console.log(json);\n\n      if (json.user) {\n        return \"success\", \"You are logged in\", \".message-container\";\n        saveToken(json.jwt);\n        saveUser(json.user);\n      }\n\n      if (json.error) {\n        return \"warning\", \"Username or password is incorrect\", \".message-container\";\n      }\n    } catch (error) {\n      return \"error\", \"error \", \".message-container\";\n    }\n  }\n};\n\n_s(Register, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n\n_c = Register;\nexport default Register; // function submitForm(event) {\n//     event.preventDefault();\n//     setUsername(username);\n//     setEmail(email);\n//     setPassword(password);\n//     console.log(username);\n//     if (username.length === 0 || email.length === 0 || password.length === 0) {\n//         return(\"warning\", \"Wrong values\", \".message-container\");\n//     }\n//     setRegister(username, email, password);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/thomasbach-nilsen/Desktop/semesterproject2/src/components/Register.js"],"names":["useState","Form","Button","saveToken","saveUser","URL","Register","username","setUsername","email","setEmail","password","setPassword","setRegister","registerData","JSON","stringify","identifier","options","method","body","headers","response","fetch","json","console","log","user","jwt","error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AACA,SAASC,GAAT,QAAoB,cAApB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAUJ,iBAAea,WAAf,CAA4BN,QAA5B,EAAsCE,KAAtC,EAA6CE,QAA7C,EAAuD;AACnD,UAAMG,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,UAAU,EAAEV,QAAd;AAAwBE,MAAAA,KAAK,EAAEA,KAA/B;AAAsCE,MAAAA,QAAQ,EAAEA;AAAhD,KAAf,CAArB;AAGA,UAAMO,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEN,YAFM;AAGZO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHG,KAAhB;;AAMJ,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAClB,GAAD,EAAMa,OAAN,CAA5B;AACA,YAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,UAAIA,IAAI,CAACG,IAAT,EAAe;AAEX,eAAO,WAAW,mBAAX,EAAgC,oBAAvC;AACCxB,QAAAA,SAAS,CAACqB,IAAI,CAACI,GAAN,CAAT;AACAxB,QAAAA,QAAQ,CAACoB,IAAI,CAACG,IAAN,CAAR;AAIJ;;AAED,UAAIH,IAAI,CAACK,KAAT,EAAgB;AACZ,eAAO,WAAW,mCAAX,EAAgD,oBAAvD;AACH;AAKJ,KAvBD,CAuBE,OAAOA,KAAP,EAAc;AACZ,aAAO,SAAS,QAAT,EAAmB,oBAA1B;AAEH;AAEA;AAIA,CAxDD;;GAAMvB,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { saveToken, saveUser } from './config/Storage';\nimport { URL } from './config/Api';\n\n\n\nconst Register = () => {\n\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n\n\n\n\n\n\n\nasync function setRegister (username, email, password) {\n    const registerData = JSON.stringify({ identifier: username, email: email, password: password });\n\n  \n    const options = {\n        method: \"POST\",\n        body: registerData,\n        headers: {\"Content-Type\": \"application/json\"},\n    };\n\ntry {\n    const response = await fetch(URL, options);\n    const json = await response.json();\n   \n    console.log(json);\n\n    if (json.user) {\n\n        return(\"success\", \"You are logged in\", \".message-container\");\n         saveToken(json.jwt);\n         saveUser(json.user);\n\n       \n\n    }\n\n    if (json.error) {\n        return(\"warning\", \"Username or password is incorrect\", \".message-container\");\n    }\n\n   \n\n    \n} catch (error) {\n    return(\"error\", \"error \", \".message-container\");\n    \n}\n\n}\n\n\n\n}\n\nexport default Register;\n\n\n// function submitForm(event) {\n//     event.preventDefault();\n \n//     setUsername(username);\n//     setEmail(email);\n//     setPassword(password);\n//     console.log(username);\n\n//     if (username.length === 0 || email.length === 0 || password.length === 0) {\n//         return(\"warning\", \"Wrong values\", \".message-container\");\n//     }\n\n//     setRegister(username, email, password);\n// }\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}